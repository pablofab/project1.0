[gd_scene load_steps=17 format=2]

[ext_resource path="res://addons/zylann.hterrain/hterrain_texture_set.gd" type="Script" id=1]
[ext_resource path="res://src/player/Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://suelo2/Ground007_1K_Color.jpg" type="Texture" id=3]
[ext_resource path="res://pasto/Ground037_1K_Color.jpg" type="Texture" id=4]
[ext_resource path="res://agua.jpg" type="Texture" id=5]
[ext_resource path="res://pasto/Ground037_1K_NormalGL.jpg" type="Texture" id=6]
[ext_resource path="res://tierra/Ground030_1K_NormalGL.jpg" type="Texture" id=7]
[ext_resource path="res://tierra/Ground030_1K_Color.jpg" type="Texture" id=8]
[ext_resource path="res://suelo/Ground032_1K_NormalGL.jpg" type="Texture" id=9]
[ext_resource path="res://suelo/Ground032_1K_Color.jpg" type="Texture" id=10]
[ext_resource path="res://terrenowo/data.hterrain" type="Resource" id=11]
[ext_resource path="res://addons/zylann.hterrain/hterrain.gd" type="Script" id=12]

[sub_resource type="Resource" id=1]
script = ExtResource( 1 )
mode = 0
textures = [ [ ExtResource( 4 ), ExtResource( 8 ), ExtResource( 10 ), ExtResource( 3 ) ], [ ExtResource( 6 ), ExtResource( 7 ), ExtResource( 9 ), null ] ]

[sub_resource type="PlaneMesh" id=2]

[sub_resource type="Shader" id=3]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float proximity_fade_distance;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_refraction;
uniform float refraction : hint_range(-16,16);
uniform vec4 refraction_texture_channel;
uniform sampler2D texture_normal : hint_normal;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	
	
	NORMALMAP = texture(texture_normal,vec2(base_uv.x + TIME * 0.05, base_uv.y )).rgb * texture(texture_normal,vec2(base_uv.x + TIME * -0.05, base_uv.y )).rgb;
	
	
	NORMALMAP_DEPTH = normal_scale;
	vec3 unpacked_normal = NORMALMAP;
	unpacked_normal.xy = unpacked_normal.xy * 2.0 - 1.0;
	unpacked_normal.z = sqrt(max(0.0, 1.0 - dot(unpacked_normal.xy, unpacked_normal.xy)));
	vec3 ref_normal = normalize( mix(NORMAL,TANGENT * unpacked_normal.x + BINORMAL * unpacked_normal.y + NORMAL * unpacked_normal.z,NORMALMAP_DEPTH) );
	vec2 ref_ofs = SCREEN_UV - ref_normal.xy * dot(texture(texture_refraction,base_uv),refraction_texture_channel) * refraction;
	float ref_amount = 1.0 - albedo.a * albedo_tex.a;
	EMISSION += textureLod(SCREEN_TEXTURE,ref_ofs,ROUGHNESS * 8.0).rgb * ref_amount;
	ALBEDO *= 1.0 - ref_amount;
	ALPHA = 1.0;
	float depth_tex = textureLod(DEPTH_TEXTURE,SCREEN_UV,0.0).r;
	vec4 world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV*2.0-1.0,depth_tex*2.0-1.0,1.0);
	world_pos.xyz/=world_pos.w;
	ALPHA*=clamp(1.0-smoothstep(world_pos.z+proximity_fade_distance,world_pos.z,VERTEX.z),0.0,1.0);
}
"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/albedo = Color( 0.333333, 0.564706, 0.647059, 0.607843 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/proximity_fade_distance = 0.06
shader_param/roughness = 0.0
shader_param/point_size = 1.0
shader_param/refraction = 0.05
shader_param/refraction_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/normal_scale = 1.0
shader_param/uv1_scale = Vector3( 10, 10, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_refraction = ExtResource( 5 )
shader_param/texture_normal = ExtResource( 5 )

[node name="Spatial" type="Spatial"]

[node name="HTerrain" type="Spatial" parent="."]
script = ExtResource( 12 )
_terrain_data = ExtResource( 11 )
chunk_size = 32
collision_enabled = true
collision_layer = 1
collision_mask = 1
shader_type = "Classic4Lite"
custom_shader = null
custom_globalmap_shader = null
texture_set = SubResource( 1 )
shader_params/u_ground_uv_scale = 20
shader_params/u_depth_blending = true
shader_params/u_triplanar = true
shader_params/u_tile_reduction = Plane( 0, 0, 0, 0 )

[node name="Agua" type="MeshInstance" parent="HTerrain"]
transform = Transform( 149.949, 0.0255352, 0.848574, -3.82908, 0.999673, -0.22156, -0.853954, 0.00133215, 149.997, 356.363, -4.73636, 165.493 )
mesh = SubResource( 2 )
material/0 = SubResource( 4 )

[node name="DirectionalLight" type="DirectionalLight" parent="HTerrain"]
transform = Transform( 0.731247, -0.512078, -0.450616, 0.682113, 0.548963, 0.483074, 0, -0.660618, 0.750722, 217.931, 53.0676, 208.248 )
light_energy = 0.42

[node name="Player" parent="HTerrain" instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 102.617, 0.989705, 134.62 )
collision_mask = 15
gravity = -45
jump_impulse = 25
